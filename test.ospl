*****
this 
is
a
multiline
comment
*****

# this is a single line comment

def add = fn((a, b), c) {
    def z = a + b + c;
    return z;
};
print "hello world!\n";

def result = add((1, 2), 6);
if result == 6 {
    print "result is equal to 6\n";
} else if result < 6 {
    print "result is less than 6\n";
} else if result > 6 {
    print "result is greater than 6\n";
} else {
    print "unreachable\n";
};

def a = 0d;
a = 1d;

select result {
    case (6) {
        print "result is 6\n";
    }

    case (_) {
        print "result isn't 6\n";
    }
};

# FFI demo: load shared library and call foreign functions
import 'mathffi' './libmathffi.so';

def cos_fn = foreign 'mathffi' 'cosine'(f64) -> f64;
def add_fn = foreign 'mathffi' 'add_ints'(i32, i32) -> i32;

print "cos(0.0) from ffi: " + cos_fn(0.0f) + "\n";
print "ffi add 7 + 5 = " + add_fn(7d, 5d) + "\n";

# FFI demo: load shared library and call its functions
import 'example' './libexample.so';

def add_two = foreign 'example' 'add_numbers'(i32, i32) -> i32;
print "add_numbers(3, 4) via ffi => " + add_two(3d, 4d) + "\n";
